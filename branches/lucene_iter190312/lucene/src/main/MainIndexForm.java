/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import indexer.AuthorIndexer;
import indexer.ConferenceIndexer;
import indexer.JournalIndexer;
import indexer.KeywordIndexer;
import indexer.OrgIndexer;
import indexer.PaperIndexer;
import indexer.SubdomainIndexer;
import indexer._Rank_Paper;

/**
 *
 * @author tiendv
 */
public class MainIndexForm extends javax.swing.JFrame {

    /**
     * Creates new form MainIndexForm
     */
    public MainIndexForm() {
        initComponents();
        this.btAuthorIndexer.setEnabled(false);
        this.btConferenceIndexer.setEnabled(false);
        this.btJournalIndexer.setEnabled(false);
        this.btKeywordIndexer.setEnabled(false);
        this.btOrgIndexer.setEnabled(false);
        this.btPaperIndexer.setEnabled(false);
        this.btRankPaper.setEnabled(true);
        this.btSubdomainIndexer.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassWord = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        btPaperIndexer = new javax.swing.JButton();
        prBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtalog = new javax.swing.JTextArea();
        btRankPaper = new javax.swing.JButton();
        btAuthorIndexer = new javax.swing.JButton();
        btConferenceIndexer = new javax.swing.JButton();
        btJournalIndexer = new javax.swing.JButton();
        btKeywordIndexer = new javax.swing.JButton();
        btOrgIndexer = new javax.swing.JButton();
        btSubdomainIndexer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Index data PubGuru");

        jLabel1.setText("Username");

        jLabel2.setText("PassWord");

        txtUserName.setText("root");

        txtPassWord.setText("root");

        jLabel3.setText("Database");

        txtDatabase.setText("cspublicationcrawler");

        jLabel4.setText("Port");

        txtPort.setText("3306");

        btPaperIndexer.setText("PaperIndexer");
        btPaperIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPaperIndexerActionPerformed(evt);
            }
        });

        txtalog.setColumns(20);
        txtalog.setRows(5);
        jScrollPane1.setViewportView(txtalog);

        btRankPaper.setText("RankPaper");
        btRankPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRankPaperActionPerformed(evt);
            }
        });

        btAuthorIndexer.setText("AuthorIndexer");
        btAuthorIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAuthorIndexerActionPerformed(evt);
            }
        });

        btConferenceIndexer.setText("ConferenceIndexer");
        btConferenceIndexer.setToolTipText("");
        btConferenceIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConferenceIndexerActionPerformed(evt);
            }
        });

        btJournalIndexer.setText("JournalIndexerr");
        btJournalIndexer.setToolTipText("");
        btJournalIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btJournalIndexerActionPerformed(evt);
            }
        });

        btKeywordIndexer.setText("KeywordIndexer");
        btKeywordIndexer.setToolTipText("");
        btKeywordIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKeywordIndexerActionPerformed(evt);
            }
        });

        btOrgIndexer.setText("OrgIndexer");
        btOrgIndexer.setToolTipText("");
        btOrgIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOrgIndexerActionPerformed(evt);
            }
        });

        btSubdomainIndexer.setText("SubdomainIndexer");
        btSubdomainIndexer.setToolTipText("");
        btSubdomainIndexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubdomainIndexerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassWord, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPort, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btRankPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btPaperIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btAuthorIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btOrgIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btSubdomainIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btConferenceIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btJournalIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btKeywordIndexer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRankPaper)
                    .addComponent(btPaperIndexer)
                    .addComponent(btAuthorIndexer))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btConferenceIndexer)
                    .addComponent(btJournalIndexer)
                    .addComponent(btKeywordIndexer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btOrgIndexer)
                    .addComponent(btSubdomainIndexer))
                .addGap(18, 18, 18)
                .addComponent(prBar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPaperIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPaperIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            PaperIndexer index = new PaperIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btPaperIndexerActionPerformed

    private void btRankPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRankPaperActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            _Rank_Paper rank = new _Rank_Paper();
            String text = rank._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(false);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btRankPaperActionPerformed

    private void btAuthorIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAuthorIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            AuthorIndexer index = new AuthorIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btAuthorIndexerActionPerformed

    private void btConferenceIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConferenceIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            ConferenceIndexer index = new ConferenceIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btConferenceIndexerActionPerformed

    private void btJournalIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btJournalIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            JournalIndexer index = new JournalIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btJournalIndexerActionPerformed

    private void btKeywordIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKeywordIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            KeywordIndexer index = new KeywordIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btKeywordIndexerActionPerformed

    private void btOrgIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOrgIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            OrgIndexer index = new OrgIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btOrgIndexerActionPerformed

    private void btSubdomainIndexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubdomainIndexerActionPerformed
        // TODO add your handling code here:
        try {
            this.btAuthorIndexer.setEnabled(false);
            this.btConferenceIndexer.setEnabled(false);
            this.btJournalIndexer.setEnabled(false);
            this.btKeywordIndexer.setEnabled(false);
            this.btOrgIndexer.setEnabled(false);
            this.btPaperIndexer.setEnabled(false);
            this.btRankPaper.setEnabled(false);
            this.btSubdomainIndexer.setEnabled(false);

            String user = txtUserName.getText();
            String pass = txtPassWord.getText();
            String database = txtDatabase.getText();
            int port = Integer.parseInt(txtPort.getText());

            prBar.setIndeterminate(false);
            prBar.setString("I'm runing");

            SubdomainIndexer index = new SubdomainIndexer();
            String text = index._run(user, pass, database, port);

            this.btAuthorIndexer.setEnabled(true);
            this.btConferenceIndexer.setEnabled(true);
            this.btJournalIndexer.setEnabled(true);
            this.btKeywordIndexer.setEnabled(true);
            this.btOrgIndexer.setEnabled(true);
            this.btPaperIndexer.setEnabled(true);
            this.btRankPaper.setEnabled(true);
            this.btSubdomainIndexer.setEnabled(true);

            prBar.setIndeterminate(true);
            prBar.setString("Done index");
            txtalog.setText(text);
        } catch (Exception ex) {
            txtalog.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btSubdomainIndexerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainIndexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainIndexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainIndexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainIndexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainIndexForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAuthorIndexer;
    private javax.swing.JButton btConferenceIndexer;
    private javax.swing.JButton btJournalIndexer;
    private javax.swing.JButton btKeywordIndexer;
    private javax.swing.JButton btOrgIndexer;
    private javax.swing.JButton btPaperIndexer;
    private javax.swing.JButton btRankPaper;
    private javax.swing.JButton btSubdomainIndexer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar prBar;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtPassWord;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextArea txtalog;
    // End of variables declaration//GEN-END:variables
}
